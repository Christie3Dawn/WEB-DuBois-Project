testFrame[325:334, 1] <- "NEVADA"
testFrame[336:345, 1] <- "NEW HAMPSHIRE"
testFrame[347:356, 1] <- "NEW JERSEY"
testFrame[358:367, 1] <- "NEW MEXICO"
testFrame[369:378, 1] <- "NEW YORK"
testFrame[380:389, 1] <- "NORTH CAROLINA"
testFrame[391:400, 1] <- "NORTH DAKOTA"
testFrame[402:411, 1] <- "OHIO"
testFrame[413:422, 1] <- "OKLAHOMA"
testFrame[424:433, 1] <- "OREGON"
testFrame[435:444, 1] <- "PENNSYLVANIA"
testFrame[446:455, 1] <- "RHODE ISLAND"
testFrame[457:466, 1] <- "SOUTH CAROLINA"
testFrame[468:477, 1] <- "SOUTH DAKOTA"
testFrame[479:488, 1] <- "TENNESSEE"
testFrame[490:499, 1] <- "TEXAS"
testFrame[501:510, 1] <- "UTAH"
testFrame[512:521, 1] <- "VERMONT"
testFrame[523:532, 1] <- "VIRGINIA"
testFrame[534:543, 1] <- "WASHINGTON"
testFrame[545:554, 1] <- "WEST VIRGINIA"
testFrame[556:565, 1] <- "WISCONSIN"
testFrame[567:576, 1] <- "WYOMING"
# Removing unneeded rows and columns
testFrame <- testFrame[-577:-583, ]
testFrame <- testFrame[-1:-4, ]
testFrame <- testFrame[ , c(1:3, 5, 10)]
# Adding column names
colnames(testFrame) <- c("State", "SexRaceHispanic", "Population",
"Registered", "Voted")
# Convert State and SexRaceHispanic to factors
testFrame$State <- as.factor(testFrame$State)
testFrame$SexRaceHispanic <- as.factor(testFrame$SexRaceHispanic)
#Converting Columns to Numeric
testFrame$Population <- as.numeric(testFrame$Population)
testFrame$Registered <- as.numeric(testFrame$Registered)
testFrame$Voted <- as.numeric(testFrame$Voted)
# Reset row numbers
rownames(testFrame) = NULL
library(dplyr)
library(ggplot2)
# Previously imported and cleaned data using Cleaning Census Voting Data Script
# Filtered for "Black alone"
BlkPop2016 <- testFrame %>%
filter(SexRaceHispanic == "Black alone") %>%
mutate(State = toupper(State))
BlkPop2016 <- BlkPop2016[-1, ]
## Bar Graph Black Population by state ----
### Adapted from Ella Hollowood (https://rpubs.com/ejhollowood/du-bois) ###
BlackPopBar2016 <- top_n(BlkPop2016, n = 15, Population) %>%
ggplot(., aes(x = reorder(State, Population), y = Population)) +
geom_bar(
stat = "identity",
width = 0.5,
fill = "red3") +
coord_flip() +
geom_text(data = subset(BlkPop2016, Population >= 2500),
aes(y = Population, ymax = Population, label = Population),
hjust = 12,
family = c("Rajdhani"), size = 5) +
geom_text(data = subset(BlkPop2016, Population == 964),
aes(y = Population, ymax = Population, label = Population),
hjust = 6,
family = c("Rajdhani"), size = 5) +
theme(text = element_text(family = "Rajdhani", colour = "black"),
panel.background = element_blank(),
axis.title = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_text(size = 16),
axis.ticks = element_blank(),
panel.grid = element_blank(),
plot.title = element_text(size = 24, hjust = 0.5,
face = "bold", margin = margin(0,0,30,0))) +
labs(title = "2016 THE STATES OF THE UNITED STATES ACCORDING\nTO THEIR BLACK POPULATION.")
# Call Plot
BlackPopBar2016
### Code above adapted from Ella Hollowood (https://rpubs.com/ejhollowood/du-bois) ###
library(openxlsx)
library(tidyverse)
library(scales)
## Historical Income Tables: Families Table F-5
# https://www.census.gov/data/tables/time-series/demo/income-poverty/historical-income-families.html
UrlToRead <- "https://www2.census.gov/programs-surveys/cps/tables/time-series/historical-income-families/f05.xlsx"
TestFrame <- read.xlsx(UrlToRead)
TestFrame <- data.frame(TestFrame)
#Removing Unnecessary Rows and Columns (Breaking down income for every 3 years from 2020-2005)
TestFrame <- TestFrame[c(-1:-274,-296:-472,-276:-278,-280:-281,-283:-285,-287:-288,-290:-291,-293:-295),c(-2:-4, -6)]
#Adding Column names
colnames(TestFrame) <- c("Year", "Mean Income(Current Dollars)")
#Converting Income Column from int to Money Data Type
TestFrame$`Mean Income(Current Dollars)` <- as.numeric(gsub("\\$",",", TestFrame$`Mean Income(Current Dollars)`))
TestFrame$`Mean Income(Current Dollars)` <- dollar(TestFrame$`Mean Income(Current Dollars)`)
#Reset Row Numbers
rownames(TestFrame) = NULL
#Script is Used for DuBoisFamilyIncomePlate22 Visualization Script
library(tidyverse)
library(ggforce)
library(showtext)
### Code from Nicola Rennie (https://github.com/nrennie/dubois_challenge/blob/main/2022/challenge_02.R) ###
# load data from CleaningCensusBlackOnlyIncomeData Script As "TestFrame" Table.
df <- TestFrame
# load fonts - Commented out for testing visualization outputs
font_add_google(name = "Space Mono", family = "space")
showtext_auto()
# prep data
circles <- tibble(x = rep(0, 6),
y = rep(0, 6),
r = c(20, 19, 18, 11, 7, 6),
fill = as.factor(1:6))
year_labels <- tibble(x = rep(0, 6),
y = -1*c(20, 19, 18, 11, 7, 6)+0.5,
label = df$Year,
colour = c(rep("black", 5), "white"))
# plot
p <- ggplot() +
# circles
#Green Represents overall outlines of each Circle in the results
geom_circle(data = circles,
mapping = aes(x0 = x, y0 = y, r = r, fill = fill),
colour = "grey") +
# cutouts
geom_arc_bar(aes(x0 = -2, y0 = 2, r0 = 16.7, r = 0, start = 5.5, end = 5.8),
fill = "#c11332", colour = "#c11332") +
geom_arc_bar(aes(x0 = 2, y0 = 2, r0 = 15.7, r = 0, start = 0.5, end = 0.8),
fill = "#dbc8b0", colour = "#dbc8b0") +
geom_arc_bar(aes(x0 = 3, y0 = 0, r0 = 13.7, r = 0, start = 1.4, end = 1.7),
fill = "#efad00", colour = "#efad00") +
geom_arc_bar(aes(x0 = 2, y0 = -2, r0 = 7.7, r = 0, start = 2.1, end = 2.7),
fill = "#3a5288", colour = "#3a5288") +
geom_arc_bar(aes(x0 = -2, y0 = -2, r0 = 3.3, r = 0, start = 3.8, end = 4.4),
fill = "#b28e73", colour = "#b28e73") +
# text
geom_text(data = year_labels,
mapping = aes(x = x, y = y, label = label, colour = I(colour)),
family = "space") +
geom_text(data = df,
mapping = aes(x = 0, y = 0, label = unlist(df[6,2])),
colour = "white", family = "space") +
geom_text(data = df,
aes(x = -4, y = -3.6, label = unlist(df[5,2])),
colour = "black", family = "space", angle = 40, size = 2.9) +
geom_text(data = df,
aes(x = 5, y = -6, label = unlist(df[4,2])),
colour = "white", family = "space", angle = -55) +
geom_text(data = df,
aes(x = 10, y = 0, label = unlist(df[3,2])),
colour = "black", family = "space", angle = 0) +
geom_text(data = df,
aes(x = 8, y = 10, label = unlist(df[2,2])),
colour = "black", family = "space", angle = 55) +
geom_text(data = df,
aes(x = -8, y = 10, label = unlist(df[1,2])),
colour = "black", family = "space", angle = -55) +
# theme
scale_fill_manual(values = c("#c11332", "#dbc8b0", "#efad00",
"#3a5288", "#b28e73", "#131313")) +
coord_fixed() +
labs(title = "MEAN INCOME OF BLACK FAMILES
\n \n
IN THE U.S. 2005-2020") +
theme(plot.background = element_rect(fill = "#dac8b8", colour="#dac8b8"),
panel.background = element_rect(fill = "#dac8b8", colour="#dac8b8"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "none",
plot.title = element_text(family = "space", face = "bold",
hjust = 0.5, size = 24,
lineheight = 0.3,
margin = margin(b = 30)),
axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
plot.margin = unit(c(0.1, 0.8, 1.3, 0.8), "cm"))
p
### Code from Nicola Rennie (https://github.com/nrennie/dubois_challenge/blob/main/2022/challenge_02.R) ###
library(dplyr)
library(ggplot2)
# Previously imported and cleaned data using Cleaning Census Voting Data Script
# Filtered for "Black alone"
BlkPop2016 <- testFrame %>%
filter(SexRaceHispanic == "Black alone") %>%
mutate(State = toupper(State))
BlkPop2016 <- BlkPop2016[-1, ]
## Bar Graph Black Population by state ----
### Adapted from Ella Hollowood (https://rpubs.com/ejhollowood/du-bois) ###
BlackPopBar2016 <- top_n(BlkPop2016, n = 15, Population) %>%
ggplot(., aes(x = reorder(State, Population), y = Population)) +
geom_bar(
stat = "identity",
width = 0.5,
fill = "red3") +
coord_flip() +
geom_text(data = subset(BlkPop2016, Population >= 2500),
aes(y = Population, ymax = Population, label = Population),
hjust = 12,
family = c("Rajdhani"), size = 5) +
geom_text(data = subset(BlkPop2016, Population == 964),
aes(y = Population, ymax = Population, label = Population),
hjust = 6,
family = c("Rajdhani"), size = 5) +
theme(text = element_text(family = "Rajdhani", colour = "black"),
panel.background = element_blank(),
axis.title = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_text(size = 16),
axis.ticks = element_blank(),
panel.grid = element_blank(),
plot.title = element_text(size = 24, hjust = 0.5,
face = "bold", margin = margin(0,0,30,0))) +
labs(title = "2016 THE STATES OF THE UNITED STATES ACCORDING\nTO THEIR BLACK POPULATION.")
# Call Plot
BlackPopBar2016
### Code above adapted from Ella Hollowood (https://rpubs.com/ejhollowood/du-bois) ###
library(openxlsx)
### Cleaning 2016 Voting Data ----
urlToRead <- "https://www2.census.gov/programs-surveys/cps/tables/p20/580/table04b.xlsx"
testFrame <- read.xlsx(urlToRead)
# Change State NA to the state name
testFrame[6:15, 1] <- "US"
testFrame[17:26, 1] <- "ALABAMA"
testFrame[28:37, 1] <- "ALASKA"
testFrame[39:48, 1] <- "ARIZONA"
testFrame[50:59, 1] <- "ARKANSAS"
testFrame[61:70, 1] <- "CALIFORNIA"
testFrame[72:81, 1] <- "COLORADO"
testFrame[83:92, 1] <- "CONNECTICUT"
testFrame[94:103, 1] <- "DELAWARE"
testFrame[105:114, 1] <- "DISTRICT OF COLUMBIA"
testFrame[116:125, 1] <- "FLORIDA"
testFrame[127:136, 1] <- "GEORGIA"
testFrame[138:147, 1] <- "HAWAII"
testFrame[149:158, 1] <- "IDAHO"
testFrame[160:169, 1] <- "ILLINOIS"
testFrame[171:180, 1] <- "INDIANA"
testFrame[182:191, 1] <- "IOWA"
testFrame[193:202, 1] <- "KANSAS"
testFrame[204:213, 1] <- "KENTUCKY"
testFrame[215:224, 1] <- "LOUISIANA"
testFrame[226:235, 1] <- "MAINE"
testFrame[237:246, 1] <- "MARYLAND"
testFrame[248:257, 1] <- "MASSACHUSETTS"
testFrame[259:268, 1] <- "MICHIGAN"
testFrame[270:279, 1] <- "MINNESOTA"
testFrame[281:290, 1] <- "MISSISSIPPI"
testFrame[292:301, 1] <- "MISSOURI"
testFrame[303:312, 1] <- "MONTANA"
testFrame[314:323, 1] <- "NEBRASKA"
testFrame[325:334, 1] <- "NEVADA"
testFrame[336:345, 1] <- "NEW HAMPSHIRE"
testFrame[347:356, 1] <- "NEW JERSEY"
testFrame[358:367, 1] <- "NEW MEXICO"
testFrame[369:378, 1] <- "NEW YORK"
testFrame[380:389, 1] <- "NORTH CAROLINA"
testFrame[391:400, 1] <- "NORTH DAKOTA"
testFrame[402:411, 1] <- "OHIO"
testFrame[413:422, 1] <- "OKLAHOMA"
testFrame[424:433, 1] <- "OREGON"
testFrame[435:444, 1] <- "PENNSYLVANIA"
testFrame[446:455, 1] <- "RHODE ISLAND"
testFrame[457:466, 1] <- "SOUTH CAROLINA"
testFrame[468:477, 1] <- "SOUTH DAKOTA"
testFrame[479:488, 1] <- "TENNESSEE"
testFrame[490:499, 1] <- "TEXAS"
testFrame[501:510, 1] <- "UTAH"
testFrame[512:521, 1] <- "VERMONT"
testFrame[523:532, 1] <- "VIRGINIA"
testFrame[534:543, 1] <- "WASHINGTON"
testFrame[545:554, 1] <- "WEST VIRGINIA"
testFrame[556:565, 1] <- "WISCONSIN"
testFrame[567:576, 1] <- "WYOMING"
# Removing unneeded rows and columns
testFrame <- testFrame[-577:-583, ]
testFrame <- testFrame[-1:-4, ]
testFrame <- testFrame[ , c(1:3, 5, 10)]
# Adding column names
colnames(testFrame) <- c("State", "SexRaceHispanic", "Population",
"Registered", "Voted")
# Convert State and SexRaceHispanic to factors
testFrame$State <- as.factor(testFrame$State)
testFrame$SexRaceHispanic <- as.factor(testFrame$SexRaceHispanic)
#Converting Columns to Numeric
testFrame$Population <- as.numeric(testFrame$Population)
testFrame$Registered <- as.numeric(testFrame$Registered)
testFrame$Voted <- as.numeric(testFrame$Voted)
# Reset row numbers
rownames(testFrame) = NULL
library(dplyr)
library(ggplot2)
# Previously imported and cleaned data using Cleaning Census Voting Data Script
# Filtered for "Black alone"
BlkPop2016 <- testFrame %>%
filter(SexRaceHispanic == "Black alone") %>%
mutate(State = toupper(State))
BlkPop2016 <- BlkPop2016[-1, ]
## Bar Graph Black Population by state ----
### Adapted from Ella Hollowood (https://rpubs.com/ejhollowood/du-bois) ###
BlackPopBar2016 <- top_n(BlkPop2016, n = 15, Population) %>%
ggplot(., aes(x = reorder(State, Population), y = Population)) +
geom_bar(
stat = "identity",
width = 0.5,
fill = "red3") +
coord_flip() +
geom_text(data = subset(BlkPop2016, Population >= 2500),
aes(y = Population, ymax = Population, label = Population),
hjust = 12,
family = c("Rajdhani"), size = 5) +
geom_text(data = subset(BlkPop2016, Population == 964),
aes(y = Population, ymax = Population, label = Population),
hjust = 6,
family = c("Rajdhani"), size = 5) +
theme(text = element_text(family = "Rajdhani", colour = "black"),
panel.background = element_blank(),
axis.title = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_text(size = 16),
axis.ticks = element_blank(),
panel.grid = element_blank(),
plot.title = element_text(size = 24, hjust = 0.5,
face = "bold", margin = margin(0,0,30,0))) +
labs(title = "2016 THE STATES OF THE UNITED STATES ACCORDING\nTO THEIR BLACK POPULATION.")
# Call Plot
BlackPopBar2016
### Code above adapted from Ella Hollowood (https://rpubs.com/ejhollowood/du-bois) ###
library(openxlsx)
### Cleaning 2020 Voting Data ----
urlToRead <- "https://www2.census.gov/programs-surveys/cps/tables/p20/585/table04b.xlsx"
testFrame <- read.xlsx(urlToRead)
# Change State NA to the state name
testFrame[6:15, 1] <- "US"
testFrame[17:26, 1] <- "ALABAMA"
testFrame[28:37, 1] <- "ALASKA"
testFrame[39:48, 1] <- "ARIZONA"
testFrame[50:59, 1] <- "ARKANSAS"
testFrame[61:70, 1] <- "CALIFORNIA"
testFrame[72:81, 1] <- "COLORADO"
testFrame[83:92, 1] <- "CONNECTICUT"
testFrame[94:103, 1] <- "DELAWARE"
testFrame[105:114, 1] <- "DISTRICT OF COLUMBIA"
testFrame[116:125, 1] <- "FLORIDA"
testFrame[127:136, 1] <- "GEORGIA"
testFrame[138:147, 1] <- "HAWAII"
testFrame[149:158, 1] <- "IDAHO"
testFrame[160:169, 1] <- "ILLINOIS"
testFrame[171:180, 1] <- "INDIANA"
testFrame[182:191, 1] <- "IOWA"
testFrame[193:202, 1] <- "KANSAS"
testFrame[204:213, 1] <- "KENTUCKY"
testFrame[215:224, 1] <- "LOUISIANA"
testFrame[226:235, 1] <- "MAINE"
testFrame[237:246, 1] <- "MARYLAND"
testFrame[248:257, 1] <- "MASSACHUSETTS"
testFrame[259:268, 1] <- "MICHIGAN"
testFrame[270:279, 1] <- "MINNESOTA"
testFrame[281:290, 1] <- "MISSISSIPPI"
testFrame[292:301, 1] <- "MISSOURI"
testFrame[303:312, 1] <- "MONTANA"
testFrame[314:323, 1] <- "NEBRASKA"
testFrame[325:334, 1] <- "NEVADA"
testFrame[336:345, 1] <- "NEW HAMPSHIRE"
testFrame[347:356, 1] <- "NEW JERSEY"
testFrame[358:367, 1] <- "NEW MEXICO"
testFrame[369:378, 1] <- "NEW YORK"
testFrame[380:389, 1] <- "NORTH CAROLINA"
testFrame[391:400, 1] <- "NORTH DAKOTA"
testFrame[402:411, 1] <- "OHIO"
testFrame[413:422, 1] <- "OKLAHOMA"
testFrame[424:433, 1] <- "OREGON"
testFrame[435:444, 1] <- "PENNSYLVANIA"
testFrame[446:455, 1] <- "RHODE ISLAND"
testFrame[457:466, 1] <- "SOUTH CAROLINA"
testFrame[468:477, 1] <- "SOUTH DAKOTA"
testFrame[479:488, 1] <- "TENNESSEE"
testFrame[490:499, 1] <- "TEXAS"
testFrame[501:510, 1] <- "UTAH"
testFrame[512:521, 1] <- "VERMONT"
testFrame[523:532, 1] <- "VIRGINIA"
testFrame[534:543, 1] <- "WASHINGTON"
testFrame[545:554, 1] <- "WEST VIRGINIA"
testFrame[556:565, 1] <- "WISCONSIN"
testFrame[567:576, 1] <- "WYOMING"
# Removing unneeded rows and columns
testFrame <- testFrame[-577:-583, ]
testFrame <- testFrame[-1:-4, ]
testFrame <- testFrame[ , c(1:3, 5, 10)]
# Adding column names
colnames(testFrame) <- c("State", "SexRaceHispanic", "Population",
"Registered", "Voted")
# Convert State and SexRaceHispanic to factors
testFrame$State <- as.factor(testFrame$State)
testFrame$SexRaceHispanic <- as.factor(testFrame$SexRaceHispanic)
#Converting Columns to Numeric
testFrame$Population <- as.numeric(testFrame$Population)
testFrame$Registered <- as.numeric(testFrame$Registered)
testFrame$Voted <- as.numeric(testFrame$Voted)
# Reset row numbers
rownames(testFrame) = NULL
library(dplyr)
library(ggplot2)
# Previously imported and cleaned data using Cleaning Census Voting Data Script
# Filtered for "Black alone"
BlackPopulation <- testFrame %>%
filter(SexRaceHispanic == "Black alone") %>%
mutate(State = toupper(State))
BlackPopulation <- BlackPopulation[-1, ]
## Bar Graph Black Population by state ----
### Adapted from Ella Hollowood (https://rpubs.com/ejhollowood/du-bois) ###
BlackPopulation <- top_n(BlackPopulation, n = 15, Population) %>%
ggplot(., aes(x = reorder(State, Population), y = Population)) +
geom_bar(
stat = "identity",
width = 0.5,
fill = "red3") +
coord_flip() +
geom_text(data = subset(BlackPopulation, Population >= 2700),
aes(y = Population, ymax = Population, label = Population),
hjust = 13,
family = c("Rajdhani"), size = 5) +
geom_text(data = subset(BlackPopulation, Population == 994),
aes(y = Population, ymax = Population, label = Population),
hjust = 6,
family = c("Rajdhani"), size = 5) +
theme(text = element_text(family = "Rajdhani", colour = "black"),
panel.background = element_blank(),
axis.title = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_text(size = 16),
axis.ticks = element_blank(),
panel.grid = element_blank(),
plot.title = element_text(size = 24, hjust = 0.5,
face = "bold", margin = margin(0,0,30,0))) +
labs(title = "2020 THE STATES OF THE UNITED STATES ACCORDING\nTO THEIR BLACK POPULATION.")
# Call Plot
BlackPopulation
### Code above adapted from Ella Hollowood (https://rpubs.com/ejhollowood/du-bois) ###
---
title: "Your title"
author: "Your name"
output:
xaringan::moon_reader:
css: [useR, useR-fonts]
lib_dir: libs
---
class: chapter-slide
# Chapter
---
## Header 2
Some text
### Header 3
```{r}
# some code
seq(1:5)
```
---
## Creating some plots
We will use the [viridis](https://cran.r-project.org/web/packages/viridis/vignettes/intro-to-viridis.html) package to create some colorblind-friendly plots.
Let's see how the graph looks like with various color-vision-deficiency [simulations](https://github.com/clauswilke/colorblindr):
```{r, echo=FALSE, message=FALSE}
library(ggplot2)
library(colorblindr)
library(viridis)
theme_useR <- function(base_size = 28) {
theme_bw(base_size = base_size) +
theme(legend.margin = margin(), legend.title = element_blank())
}
```
```{r}
fig <- ggplot(iris, aes(Sepal.Length, fill = Species)) +
geom_density(alpha = 0.7) + theme_useR() +
theme(legend.position = c(0.8, 0.9),legend.margin = margin(),
legend.title = element_blank())
fig_grid <- cvd_grid(fig)
```
.center[
```{r,echo=FALSE, fig.show="hold", out.width="40%"}
fig
cvd_grid(ggplot(iris, aes(Sepal.Length, fill = Species)) +
geom_density(alpha = 0.7) + theme_useR(base_size = 18) +
theme(legend.position = c(0.7, 0.8)) )
```
]
---
Let's use a color scale that works better
```{r}
fig2 <- ggplot(iris, aes(Sepal.Length, fill = Species)) +
geom_density(alpha = 0.8) + theme_useR() +
theme(legend.position = c(0.8, 0.9))+
scale_fill_viridis(discrete = TRUE)
fig_grid2 <- cvd_grid(fig2)
```
```{r,echo=FALSE, fig.show="hold", out.width="48%"}
fig2
cvd_grid(ggplot(iris, aes(Sepal.Length, fill = Species)) +
geom_density(alpha = 0.8) + theme_useR(base_size = 18) +
theme(legend.position = c(0.7, 0.8))+ scale_fill_viridis(discrete = TRUE) )
```
---
## Do not forget to include alt-text to your figures!
Knitr (version >= 1.31) have a new feature to add alt-text to your figures. Just add fig.alt = "Your alt-text” in the chunk options.
```{r,echo=FALSE, fig.show="hold", out.width="40%", fig.alt="Two ggplot panels, comparing default ggplot2 colors versus the ggplot2 result using viridis color palette. Each panel shows three superposed color-filled histograms. The default scale uses the colors salmon, light green and light blue, but viridis scale uses purple, aquamarine and yellow, which gives a better contrast."}
fig
fig2
```
xaringan::infinite_moon_reader()
xaringan::infinite_moon_reader()
install.packages("xaringanthemer")
library(xaringanthemer)
xaringan::infinite_moon_reader()
library(xaringanthemer)
xaringan::infinite_moon_reader()
xaringan::infinite_moon_reader()
xaringan::infinite_moon_reader()
